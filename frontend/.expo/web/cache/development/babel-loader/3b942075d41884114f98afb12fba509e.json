{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/html/react-native/instagram/frontend/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD8mYqzqBIZFZKU5LKRHPPJqHgcxGxMJDI\",\n  authDomain: \"instagram-dev-b014c.firebaseapp.com\",\n  projectId: \"instagram-dev-b014c\",\n  storageBucket: \"instagram-dev-b014c.appspot.com\",\n  messagingSenderId: \"936949924613\",\n  appId: \"1:936949924613:web:772781d6471650cbf9ad6c\",\n  measurementId: \"G-KKE8S28J56\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport LoginScreen from \"./components/auth/Login\";\nimport Loader from \"./components/Loader\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loggedIn: false,\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(Loader, {\n          loading: loaded,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShow: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShow: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShow: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShow: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/var/www/html/react-native/instagram/frontend/App.js"],"names":["StatusBar","React","Component","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Provider","createStore","applyMiddleware","rootReducer","thunk","store","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","MainScreen","AddScreen","SaveScreen","LoginScreen","Loader","CommentScreen","Stack","App","props","state","loggedIn","loaded","auth","onAuthStateChanged","user","setState","headerShow","navigation"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport { View, Text } from \"react-native\";\nimport * as firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8mYqzqBIZFZKU5LKRHPPJqHgcxGxMJDI\",\n  authDomain: \"instagram-dev-b014c.firebaseapp.com\",\n  projectId: \"instagram-dev-b014c\",\n  storageBucket: \"instagram-dev-b014c.appspot.com\",\n  messagingSenderId: \"936949924613\",\n  appId: \"1:936949924613:web:772781d6471650cbf9ad6c\",\n  measurementId: \"G-KKE8S28J56\",\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport LoginScreen from \"./components/auth/Login\";\nimport Loader from \"./components/Loader\";\nimport CommentScreen from \"./components/main/Comment\";\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        });\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { loggedIn, loaded } = this.state;\n\n    if (!loaded) {\n      return <Loader loading={loaded} />;\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Landing\">\n            <Stack.Screen name=\"Landing\" component={LandingScreen} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen\n              name=\"Main\"\n              component={MainScreen}\n              options={{ headerShow: false }}\n            />\n            <Stack.Screen\n              name=\"Add\"\n              component={AddScreen}\n              navigation={this.props.navigation}\n              options={{ headerShow: false }}\n            />\n            <Stack.Screen\n              name=\"Save\"\n              component={SaveScreen}\n              navigation={this.props.navigation}\n              options={{ headerShow: false }}\n            />\n            <Stack.Screen\n              name=\"Comment\"\n              component={CommentScreen}\n              navigation={this.props.navigation}\n              options={{ headerShow: false }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}