{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/react-native/instagram/frontend/components/main/Comment.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\nfunction Comment(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    function matchUserToComment(comments) {\n      var _loop = function _loop(i) {\n        if (comments[i].hasOwnProperty(\"user\")) {\n          return \"continue\";\n        }\n\n        var user = props.users.find(function (x) {\n          return x.uid === comments[i].creater;\n        });\n\n        if (user == undefined) {\n          props.fetchUsersData(comments[i].creater, false);\n        } else {\n          comments[i].user = user;\n        }\n      };\n\n      for (var i = 0; i < comments.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      setComments(comments);\n    }\n\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  }, [props.route.params.postId, props.users]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").doc(props.route.params.postId).collection(\"comments\").add({\n      creater: firebase.auth().currentUser.uid,\n      text: text\n    });\n    props.navigation.navigate(\"Feed\");\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, item.user !== undefined ? React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 40\n        }\n      }, item.user.name) : null, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, item.text));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Comment....\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Comment\",\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\nvar styles = StyleSheet.create({\n  inputStyle: {\n    fontSize: 16,\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    width: \"100%\",\n    marginTop: 5,\n    marginBottom: 10,\n    color: \"#040707\",\n    paddingRight: 30\n  },\n  view: {\n    marginTop: 15,\n    padding: 15\n  }\n});","map":{"version":3,"sources":["/var/www/html/react-native/instagram/frontend/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","Comment","props","comments","setComments","postId","setPostId","text","setText","matchUserToComment","i","hasOwnProperty","user","users","find","x","uid","creater","undefined","length","route","params","firestore","collection","doc","get","then","snapshot","docs","map","data","id","onCommentSend","add","auth","currentUser","navigation","navigate","item","name","styles","view","inputStyle","mapStateToProps","store","usersState","mapDispatchToProps","dispatch","StyleSheet","create","fontSize","backgroundColor","padding","borderWidth","borderColor","width","marginTop","marginBottom","color","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  FlatList,\n  Button,\n  TextInput,\n  StyleSheet,\n} from \"react-native\";\n\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\nfunction Comment(props) {\n  const [comments, setComments] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    function matchUserToComment(comments) {\n      for (let i = 0; i < comments.length; i++) {\n        if (comments[i].hasOwnProperty(\"user\")) {\n          continue;\n        }\n\n        const user = props.users.find((x) => x.uid === comments[i].creater);\n        if (user == undefined) {\n          props.fetchUsersData(comments[i].creater, false);\n        } else {\n          comments[i].user = user;\n        }\n      }\n\n      setComments(comments);\n    }\n    if (props.route.params.postId !== postId) {\n      firebase\n        .firestore()\n        .collection(\"posts\")\n        .doc(props.route.params.uid)\n        .collection(\"userPosts\")\n        .doc(props.route.params.postId)\n        .collection(\"comments\")\n        .get()\n        .then((snapshot) => {\n          let comments = snapshot.docs.map((doc) => {\n            const data = doc.data();\n            const id = doc.id;\n            return { id, ...data };\n          });\n          matchUserToComment(comments);\n        });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  }, [props.route.params.postId, props.users]);\n\n  const onCommentSend = () => {\n    firebase\n      .firestore()\n      .collection(\"posts\")\n      .doc(props.route.params.uid)\n      .collection(\"userPosts\")\n      .doc(props.route.params.postId)\n      .collection(\"comments\")\n      .add({\n        creater: firebase.auth().currentUser.uid,\n        text,\n      });\n    props.navigation.navigate(\"Feed\");\n  };\n\n  return (\n    <View>\n      <FlatList\n        numColumns={1}\n        horizontal={false}\n        data={comments}\n        renderItem={({ item }) => (\n          <View>\n            {item.user !== undefined ? <Text>{item.user.name}</Text> : null}\n            <Text>{item.text}</Text>\n          </View>\n        )}\n      />\n      <View style={styles.view}>\n        <TextInput\n          style={styles.inputStyle}\n          placeholder=\"Comment....\"\n          onChangeText={(text) => setText(text)}\n        />\n        <Button title=\"Comment\" onPress={() => onCommentSend()} />\n      </View>\n    </View>\n  );\n}\nconst mapStateToProps = (store) => ({\n  users: store.usersState.users,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchUsersData,\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n\nconst styles = StyleSheet.create({\n  inputStyle: {\n    fontSize: 16,\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    width: \"100%\",\n    marginTop: 5,\n    marginBottom: 10,\n    color: \"#040707\",\n    paddingRight: 30,\n  },\n  view: {\n    marginTop: 15,\n    padding: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}