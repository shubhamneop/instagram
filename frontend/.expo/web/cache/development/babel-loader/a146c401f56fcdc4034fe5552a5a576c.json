{"ast":null,"code":"var unitlessNumbers = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["/var/www/html/react-native/instagram/frontend/node_modules/react-native-web/src/modules/unitlessNumbers/index.js"],"names":["unitlessNumbers","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","charAt","toUpperCase","substring","Object","keys","forEach","prop"],"mappings":"AAUA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,uBAAuB,EAAE,IADH;AAEtBC,EAAAA,iBAAiB,EAAE,IAFG;AAGtBC,EAAAA,gBAAgB,EAAE,IAHI;AAItBC,EAAAA,gBAAgB,EAAE,IAJI;AAKtBC,EAAAA,OAAO,EAAE,IALa;AAMtBC,EAAAA,YAAY,EAAE,IANQ;AAOtBC,EAAAA,eAAe,EAAE,IAPK;AAQtBC,EAAAA,WAAW,EAAE,IARS;AAStBC,EAAAA,IAAI,EAAE,IATgB;AAUtBC,EAAAA,QAAQ,EAAE,IAVY;AAWtBC,EAAAA,SAAS,EAAE,IAXW;AAYtBC,EAAAA,YAAY,EAAE,IAZQ;AAatBC,EAAAA,UAAU,EAAE,IAbU;AActBC,EAAAA,YAAY,EAAE,IAdQ;AAetBC,EAAAA,UAAU,EAAE,IAfU;AAgBtBC,EAAAA,OAAO,EAAE,IAhBa;AAiBtBC,EAAAA,UAAU,EAAE,IAjBU;AAkBtBC,EAAAA,UAAU,EAAE,IAlBU;AAmBtBC,EAAAA,YAAY,EAAE,IAnBQ;AAoBtBC,EAAAA,UAAU,EAAE,IApBU;AAqBtBC,EAAAA,aAAa,EAAE,IArBO;AAsBtBC,EAAAA,aAAa,EAAE,IAtBO;AAuBtBC,EAAAA,eAAe,EAAE,IAvBK;AAwBtBC,EAAAA,SAAS,EAAE,IAxBW;AAyBtBC,EAAAA,OAAO,EAAE,IAzBa;AA0BtBC,EAAAA,KAAK,EAAE,IA1Be;AA2BtBC,EAAAA,OAAO,EAAE,IA3Ba;AA4BtBC,EAAAA,OAAO,EAAE,IA5Ba;AA6BtBC,EAAAA,MAAM,EAAE,IA7Bc;AA8BtBC,EAAAA,MAAM,EAAE,IA9Bc;AA+BtBC,EAAAA,IAAI,EAAE,IA/BgB;AAiCtBC,EAAAA,WAAW,EAAE,IAjCS;AAkCtBC,EAAAA,YAAY,EAAE,IAlCQ;AAmCtBC,EAAAA,WAAW,EAAE,IAnCS;AAoCtBC,EAAAA,eAAe,EAAE,IApCK;AAqCtBC,EAAAA,gBAAgB,EAAE,IArCI;AAsCtBC,EAAAA,gBAAgB,EAAE,IAtCI;AAuCtBC,EAAAA,aAAa,EAAE,IAvCO;AAwCtBC,EAAAA,WAAW,EAAE,IAxCS;AA0CtBC,EAAAA,KAAK,EAAE,IA1Ce;AA2CtBC,EAAAA,MAAM,EAAE,IA3Cc;AA4CtBC,EAAAA,MAAM,EAAE,IA5Cc;AA6CtBC,EAAAA,MAAM,EAAE,IA7Cc;AA+CtBC,EAAAA,aAAa,EAAE;AA/CO,CAAxB;AAsDA,IAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAAjB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAiBC,GAAjB,EAAiC;AACjD,SAAOD,MAAM,GAAGC,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAT,GAAuCF,GAAG,CAACG,SAAJ,CAAc,CAAd,CAA9C;AACD,CAFD;;AAGAC,MAAM,CAACC,IAAP,CAAYrD,eAAZ,EAA6BsD,OAA7B,CAAqC,UAACC,IAAD,EAAU;AAC7CV,EAAAA,QAAQ,CAACS,OAAT,CAAiB,UAACP,MAAD,EAAY;AAC3B/C,IAAAA,eAAe,CAAC8C,SAAS,CAACC,MAAD,EAASQ,IAAT,CAAV,CAAf,GAA2CvD,eAAe,CAACuD,IAAD,CAA1D;AACD,GAFD;AAGD,CAJD;AAMA,eAAevD,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst unitlessNumbers = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true\n};\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nconst prefixKey = (prefix: string, key: string) => {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach((prop) => {\n  prefixes.forEach((prefix) => {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\n\nexport default unitlessNumbers;\n"]},"metadata":{},"sourceType":"module"}