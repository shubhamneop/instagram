{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, CLEAR_DATA, USERS_LIKES_STATE_CHANGE } from \"../constants\";\nvar initialState = {\n  users: [],\n  feed: [],\n  userFollowingLoaded: 0\n};\nexport var users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USERS_DATA_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [].concat(_toConsumableArray(state.users), [action.user])\n      });\n\n    case USERS_POSTS_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userFollowingLoaded: state.userFollowingLoaded + 1,\n        feed: [].concat(_toConsumableArray(state.feed), _toConsumableArray(action.posts))\n      });\n\n    case USERS_LIKES_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        feed: state.feed.map(function (post) {\n          return post.id == action.postId ? _objectSpread(_objectSpread({}, post), {}, {\n            currentUserLike: action.currentUserLike\n          }) : post;\n        })\n      });\n\n    case CLEAR_DATA:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/var/www/html/react-native/instagram/frontend/redux/reducers/users.js"],"names":["USERS_DATA_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","CLEAR_DATA","USERS_LIKES_STATE_CHANGE","initialState","users","feed","userFollowingLoaded","state","action","type","user","posts","map","post","id","postId","currentUserLike"],"mappings":";;;;;;;AAAA,SACEA,uBADF,EAEEC,wBAFF,EAGEC,UAHF,EAIEC,wBAJF;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,mBAAmB,EAAE;AAHF,CAArB;AAMA,OAAO,IAAMF,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCG,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,uBAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,KAAK,+BAAMG,KAAK,CAACH,KAAZ,IAAmBI,MAAM,CAACE,IAA1B;AAFP;;AAIF,SAAKV,wBAAL;AACE,6CACKO,KADL;AAEED,QAAAA,mBAAmB,EAAEC,KAAK,CAACD,mBAAN,GAA4B,CAFnD;AAGED,QAAAA,IAAI,+BAAME,KAAK,CAACF,IAAZ,sBAAqBG,MAAM,CAACG,KAA5B;AAHN;;AAKF,SAAKT,wBAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWO,GAAX,CAAe,UAACC,IAAD;AAAA,iBACnBA,IAAI,CAACC,EAAL,IAAWN,MAAM,CAACO,MAAlB,mCAESF,IAFT;AAGMG,YAAAA,eAAe,EAAER,MAAM,CAACQ;AAH9B,eAKIH,IANe;AAAA,SAAf;AAFR;;AAWF,SAAKZ,UAAL;AACE,aAAOE,YAAP;;AACF;AACE,aAAOI,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["import {\n  USERS_DATA_STATE_CHANGE,\n  USERS_POSTS_STATE_CHANGE,\n  CLEAR_DATA,\n  USERS_LIKES_STATE_CHANGE,\n} from \"../constants\";\n\nconst initialState = {\n  users: [],\n  feed: [],\n  userFollowingLoaded: 0,\n};\n\nexport const users = (state = initialState, action) => {\n  switch (action.type) {\n    case USERS_DATA_STATE_CHANGE:\n      return {\n        ...state,\n        users: [...state.users, action.user],\n      };\n    case USERS_POSTS_STATE_CHANGE:\n      return {\n        ...state,\n        userFollowingLoaded: state.userFollowingLoaded + 1,\n        feed: [...state.feed, ...action.posts],\n      };\n    case USERS_LIKES_STATE_CHANGE:\n      return {\n        ...state,\n        feed: state.feed.map((post) =>\n          post.id == action.postId\n            ? {\n                ...post,\n                currentUserLike: action.currentUserLike,\n              }\n            : post\n        ),\n      };\n    case CLEAR_DATA:\n      return initialState;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}